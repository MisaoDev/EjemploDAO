package gui;

import dao.ConsolaDAO;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Consola;

/**
 *
 * @author MisaoDev <{@link https://github.com/MisaoDev}>
 */
public class FormConsola extends javax.swing.JFrame {

  /**
   * Creates new form FormConsola
   */
  public FormConsola() {
    initComponents();
    
    //  Obtiene el modelo de la tabla (manteniendo las columnas editadas en Netbeans)
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    //  Borra todas las filas
    model.setRowCount(0);
    
    ConsolaDAO consolaDAO = new ConsolaDAO();
    
    //  Por cada consola en la base de datos, agrega una fila con sus datos
    for (Consola c : consolaDAO.getLista()) {
      Object[] row = new Object[2];
      row[0] = c.getId();
      row[1] = c.getNombre();
      model.addRow(row);
    }
    
    //  Modificar los campos de texto al seleccionar una fila de la tabla
    jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
      @Override
      public void valueChanged(ListSelectionEvent event) {
        if (jTable1.getSelectedRow() == -1) {
          return;
        }
        textId.setText    (jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        textNombre.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
      }
    });
    
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
   * code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();
    jLabel1 = new javax.swing.JLabel();
    textId = new javax.swing.JTextField();
    textNombre = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    btnAgregar = new javax.swing.JButton();
    btnEliminar = new javax.swing.JButton();
    btnModificar = new javax.swing.JButton();
    btnNuevo = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setMaximumSize(new java.awt.Dimension(600, 400));
    setMinimumSize(new java.awt.Dimension(600, 400));
    setResizable(false);

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null},
        {null, null},
        {null, null},
        {null, null}
      },
      new String [] {
        "ID", "Nombre"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jScrollPane1.setViewportView(jTable1);
    if (jTable1.getColumnModel().getColumnCount() > 0) {
      jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
      jTable1.getColumnModel().getColumn(0).setMaxWidth(160);
    }

    jLabel1.setLabelFor(textId);
    jLabel1.setText("ID");

    textId.setEditable(false);

    jLabel2.setLabelFor(textNombre);
    jLabel2.setText("Nombre");

    btnAgregar.setText("Agregar");
    btnAgregar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnAgregarActionPerformed(evt);
      }
    });

    btnEliminar.setText("Eliminar");
    btnEliminar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnEliminarActionPerformed(evt);
      }
    });

    btnModificar.setText("Modificar");
    btnModificar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnModificarActionPerformed(evt);
      }
    });

    btnNuevo.setText("Nuevo");
    btnNuevo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnNuevoActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
              .addComponent(textNombre)))
          .addGroup(layout.createSequentialGroup()
            .addComponent(btnNuevo)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnAgregar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnModificar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnEliminar)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(12, 12, 12)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(jLabel2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnAgregar)
          .addComponent(btnEliminar)
          .addComponent(btnModificar)
          .addComponent(btnNuevo))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    //  Capturar los datos de los campos (el id no es necesario)
    String nombre = textNombre.getText();
    
    //  Crear e insertar el objeto consola en la base de datos
    Consola consola = new Consola(0, nombre);
    new ConsolaDAO().insertar(consola);
    
    //  Agregar el registro al modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    Object[] row = {consola.getId(), nombre};
    model.addRow(row);
  }//GEN-LAST:event_btnAgregarActionPerformed

  private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
    //  Poner el ID siguiente, vaciar los campos y darle foco al primer campo (nombre)
    int id = jTable1.getRowCount() + 1;
    textId.setText(Integer.toString(id));
    textNombre.setText("");
    textNombre.requestFocus();
  }//GEN-LAST:event_btnNuevoActionPerformed

  private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
    //  Capturar los datos de los campos
    int id        = Integer.parseInt(textId.getText());
    String nombre = textNombre.getText();
    
    //  Crear el objeto consola para actualizar la base de datos
    Consola consola = new Consola(id, nombre);
    new ConsolaDAO().actualizar(id, consola);
    
    //  Eliminar la fila original y agregar el registro nuevo
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    Object[] row = {consola.getId(), nombre};
    model.insertRow(id, row);
    model.removeRow(id - 1);
    model.fireTableDataChanged();
  }//GEN-LAST:event_btnModificarActionPerformed

  private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    //  Obtener el id del elemento seleccionado
    int selectedRow = jTable1.getSelectedRow();
    int id = (int) jTable1.getValueAt(selectedRow, 0);
    
    try {
      //  Eliminar el registro de la base de datos
      new ConsolaDAO().eliminar(id);
      
    } catch (Exception e) {
      //  Si hay error mostrar mensaje y no ejecutar el resto del c√≥digo
      JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error de SQL", JOptionPane.ERROR_MESSAGE);
      return;
    }
    
    //  Eliminar la fila de la tabla
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.removeRow(selectedRow);
    model.fireTableRowsDeleted(selectedRow, selectedRow);
  }//GEN-LAST:event_btnEliminarActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(FormConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(FormConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(FormConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(FormConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new FormConsola().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnAgregar;
  private javax.swing.JButton btnEliminar;
  private javax.swing.JButton btnModificar;
  private javax.swing.JButton btnNuevo;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable1;
  private javax.swing.JTextField textId;
  private javax.swing.JTextField textNombre;
  // End of variables declaration//GEN-END:variables
}
